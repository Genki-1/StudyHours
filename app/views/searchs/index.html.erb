<div class="container">
  <div class="row">
    <div class="col-12">
      <div id="study_input" class="form-group mb-3">
        <div class="d-flex mb-3 mt-3">
          <select id="search_select" name="search" class="form-control col-lg-2 col-6">
            <option value="name">ユーザー名</option>
            <option value="note">ノートのタイトル</option>
            <option value="tag">タグ</option>
          </select>
          <div class="d-flex align-items-center">で検索</div>
        </div>
          <input type="form" id="form" class="d-flex mb-3 form-control" placeholder="入力後エンターを押してください" style="width: 300px;" />
      </div>
    </div>
  </div>
  <!-- タブメニューの処理 -->
  <ul id="myTab" class="nav nav-tabs" role="tablist">
    <li class="nav-item">
      <a href="#study_log" id="study_log-tab" class="nav-link active" role="tab" data-toggle="tab" aria-controls="record" aria-selected="true">学習記録</a>
    </li>
    <li class="nav-item">
      <a href="#note" id="note-tab" class="nav-link" role="tab" data-toggle="tab" aria-controls="note" aria-selected="false">ノート</a>
    </li>
    <li class="nav-item">
      <a href="#user" id="user-tab" class="nav-link" role="tab" data-toggle="tab" aria-controls="user" aria-selected="false">ユーザ</a>
    </li>
  </ul>
  <div id="myTabContent" class="tab-content mt-3">
    <!-- 学習記録の処理 -->
    <div id="study_log" class="tab-pane active fade show" role="tabpanel" aria-labelledby="study_log-tab">
      <div class="btn-group mb-3 study_btn" id="study_sort" role="group">
        <button type="button" class="sort btn btn-secondary" id="study_favorite_sort">いいね順</button>
        <button type="button" class="sort btn btn-secondary" id="study_created_sort">絞り込みを解除</button>
      </div>
      <div id="study-preview" class="row">
        <%= render 'study_logs/study_log_list', study_logs: @study_logs %>
      </div>
      <button class="btn btn-info more mt-2" id="more-study-logs" data-default-length="<%=@study_log_length%>" data-length="<%=@study_log_length%>" data-offset="6" data-limit="6" data-sort="study_log_default">もっとみる</button>
    </div>
    <!-- ノート -->
    <div id="note" class="tab-pane fade" role="tabpanel" aria-labelledby="note-tab">
      <div class="btn-group mb-3 study_btn" id="note_sort" role="group">
        <button type="button" class="sort btn btn-secondary" id="note_favorite_sort">いいね順</button>
        <button type="button" class="sort btn btn-secondary" id="note_created_sort">絞り込みを解除</button>
      </div>
      <div id="note-preview">
        <%= render 'notes/note_list', notes: @notes %>
      </div>
      <button class="btn btn-info more mt-2" id="more-notes" data-default-length="<%=@note_length %>" data-length="<%=@note_length%>" data-offset="6"  data-limit="6" data-sort="note_default">もっとみる</button>
    </div>
    <!-- ユーザ一覧 -->
    <div id="user" class="tab-pane fade" role="tabpanel" aria-labelledby="note-tab">
      <div class="btn-group mb-3 study_btn" id="user_sort" role="group">
        <button type="button" class="sort btn btn-secondary" id="user_follower_sort">フォロワー数順</button>
        <button type="button" class="sort btn btn-secondary" id="user_created_sort">絞り込みを解除</button>
      </div>
      <div id="user-preview">
        <%= render 'users/user_list', users: @users %>      
      </div>
      <button class="btn btn-info more mt-2" id="more-users" data-default-length="<%=@user_length %>" data-length="<%=@user_length%>" data-offset="6"  data-limit="6" data-sort="user_default">もっとみる</button>
    </div>
  </div>
</div>
<script>
  $(document).on('turbolinks:load', function () {
    // もっと見るボタンのlengthが6以下の場合は、もっと見るボタンを押せないようにする
    if($("#more-study-logs").data('length') <= 6){
      $("#more-study-logs").prop('disabled',true);
    }

    if($("#more-notes").data('length') <= 6){
      $("#more-notes").prop('disabled',true);
    }

    if($("#more-users").data('length') <= 6){
      $("#more-users").prop('disabled',true);
    }


  // 各HTMLを作成する処理ここから---------------------------
    // StudyLogのHTMLを作成
    function StudyLog_HTML(study_logs) {
      var study_log_html = '';
      var study_log_tags = '';
      var study_log_favorite_html = '';
      var study_log_image = '';
      var html = '';

      // １件ずつデータを受け取り、HTMLを形成
      study_logs.forEach(function(study_log){
        var study_log_favorites = 0;

        if (study_log.current_user == "Guest"){
          var study_log_own_favorite = 2;
        }else {
          var study_log_own_favorite = 0;            
        }

        // お気に入りのカウント・自分のIDが存在しているかの確認
        study_log.study_log_favorites.forEach(function(study_log_favorite){
          study_log_favorite_html = '';
          study_log_favorites += 1;
          // お気に入りをしたユーザと、ログインしているユーザが一致しているか判定する。一致していたら1。一致していなかったら0。guestだったら2
          if (study_log_favorite.user_id === study_log.current_user){
            study_log_own_favorite = 1;
          } else if(study_log_favorite.user_id !== study_log.current_user){
            study_log_own_favorite = 0;
          };
        });

        // いいねの処理(分岐)
        // お気に入りをしたユーザとログインしているユーザが一致していた場合
        if(study_log_own_favorite === 1){
          study_log_favorite_html = `<a data-remote="true" rel="nofollow" data-method="delete" href="/study_logs/${study_log.id}/study_log_favorites"><i class="fas fa-thumbs-up">${study_log_favorites}</i></a>`
        }else　if(study_log_own_favorite === 2){
          study_log_favorite_html = `<i class="far fa-thumbs-up">${study_log_favorites}</i>`
        }else if(study_log_own_favorite === 0){
          study_log_favorite_html = `<a data-remote="true" rel="nofollow" data-method="post"
          href="/study_logs/${study_log.id}/study_log_favorites"><i class="far fa-thumbs-up">${study_log_favorites}</i></a>`
        };

        // 勉強詳細時間の処理
          let study_log_tags = '';
          // タグのHTMLを形成
          study_log.tags.forEach(function(tags,index_tag){
            study_log_tags += `<a class="badge-success p-1 mr-1 badge-tag" href="/searchs?genre_id=1&amp;search_id=1&amp;tag_name=${study_log.tags[index_tag].tag}">${study_log.tags[index_tag].tag}</a>`
          });

        // プロフィール画像が設定されているか確認
        if(study_log.user.profile_image == null){
         study_log_image = `<a href="/users/${study_log.user.id}"><img class="attachment user profile_image pull-left profile-img user-list-img" src="no_image.png" style="width: 80px; height="80px;"></a>`
        } else {
          study_log_image =`<a href="/users/${study_log.user.id}"><img class="attachment user profile_image pull-left profile-img user-list-img" src="${study_log.user.profile_image}"style="width: 80px; height: 80px;"></a>`
        }

        // htmlを生成
          study_log_html += `
                          <div class="col-xl-4 col-lg-6 col-md-12 mb-2">
                            <div class="s-card h-100 study-log-list">
                              <div class="s-header d-flex">
                                ${study_log_image}
                                <div class="ml-3 d-flex flex-column justify-content-center">
                                  <h6>${study_log.working_date}</h6>
                                  <h5>${study_log.user.name}</h6>
                                </div>
                              </div>
                              <ul class="list-group">
                                <li class="list-group-item study-log-list-tag">
                                  <div class="col-12">
                                    <div>学習内容</div>
                                  </div>
                                  <div class="col-12">
                                    ${study_log_tags}
                                  </div>
                                </li>
                                <li class="list-group-item">
                                  <span class="col-3">学習時間</span>
                                  <span class="col-9">${study_log.hour}時間${study_log.minute}分</span> 
                                </li>
                                <li class="list-group-item s-card-memo">
                                  <div class="card-body pt-2">
                                    <span class="absolute">学習メモ</span>
                                    <div class="mt-2 col-12">
                                      ${study_log.memo}
                                    </div>
                                  </div>
                                </li>
                              </ul>
                              <div class="s-card-footer d-flex">
                                <!-- いいね機能の処理 -->
                                <span id="study-log-favorite-${study_log.id}">
                                ${study_log_favorite_html}
                                </span>
                                <span class="s-card-footer-margin"><a href="/study_logs/${study_log.id}">詳細へ</a></span>
                                </div>
                              </div>
                            </div>
                            `
         });
    return study_log_html;
    };

    // NoteのHTMLを作成
    function Note_HTML(note){
      var note_html = '';
      var html = '';
      var note_comments_count = 0;
      var note_favorites_count = 0;
      var note_img = '';
      var note_tags = '';

      // １件ずつデータを受け取り、HTMLを形成
      note.forEach(function(note){
        // カウントを初期化
        note_comments_count = 0;
        note_favorites_count = 0;
        note.note_favorites.forEach(function(note_favorite){
          note_favorites_count += 1;
        });
        note.note_comments.forEach(function(note_comment){
          note_comments_count += 1;
        });

        note_tags = '';
        note.tags.forEach(function(tags,index_tag){
          note_tags += `<a class="badge-success p-1 mr-1 badge-tag tag_list" href="/searchs?genre_id=2&amp;search_id=1&amp;tag_name=${note.tags[index_tag].tag}">${note.tags[index_tag].tag}</a>`
        });

        // ユーザ画像が登録されているか確認
        if(note.user.profile_image == null){
         note_image = `<a href="/users/${note.user.id}"><img class="attachment user profile_image pull-left list-img profile-img" src="no_image.png" style="width: 100px; height: 100px;"></a>`
        } else {
          note_image =`<a href="/users/${note.user.id}"><img class="attachment user profile_image pull-left list-img profile-img" src="${note.user.profile_image}" style= "width: 100px; height: 100px;"></a>`
        };

        // ノートのhtmlを作成
        note_html +=  ` 
                        <div class="note-card mt-2" >
                          <div class="card-body">
                            <div class="d-flex">
                              ${note_image}
                            <div class="d-flex align-items-center">
                              <div class="margin-left">
                                <div class="link-position  mb-3 mt-2">
                                  <a href="notes/${note.id}">
                                   <div class="title">${note.title}</div>
                                  </a>
                                </div>
                                <h6 class="text-muted">${note.created_at}<br>${note.user.name}</h6>
                              </div>
                              <div class="value">
                                <i class="far fa-thumbs-up"> ${note_favorites_count}</i>
                                <i class="far fa-comment"> ${note_comments_count}</i>
                              </div>
                              <div class="badge-position">
                                ${note_tags}
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    `
    });
    return note_html;
    }

    // UserのHTMLを作成
    function User_HTML(user){
      var html = '';
      var user_html = '';
      var user_image = '';
      var user_introduction = '';
      var follow_count = 0;
      var follower_count = 0;
        
      // １件ずつデータを受け取りHTMLを形成する
      user.forEach(function(user){
        // ユーザ画像が登録されているか確認
        if(user.profile_image == null){
         user_image = `<img class="attachment user profile_image pull-left profile-img" src="no_image.png" style= "width: 100px; height: 100px;">`
        } else {
          user_image =`<img class="attachment user profile_image pull-left profile-img" src="${user.profile_image}" style= "width: 100px; height: 100px; object-fit: cover;">`
        };

        if(user.introduction == null){
          user_introduction = ''
        } else {
          user_introduction = user.introduction
        }

        follow_count = 0;
        follower_count = 0;

        // フォローのカウント
        user.relationships.forEach(function(relation){
          follow_count += 1;
        });
        // フォロワーのカウント
        user.reverse_of_relationships.forEach(function(relation){
          follower_count += 1;
        });

        // htmlを作成する処理
        user_html +=`
                    <div class="user-card mt-2">
                      <div class="follow">
                        <i class="far fa-handshake"> <b>${follow_count}</b></i>/
                        <i class="fas fa-handshake"> <b>${follower_count}</b></i>
                      </div>
                      <div class="card-body">
                        <a class="d-flex align-items-center col-lg-6 col-12" href="/users/${user.id}">
                          ${user_image}
                          <div class="ml-1 col-lg-6">
                            <h4 class="card-title">${user.name}</h4>
                            <h6 class="card-subtitle text-muted">${user_introduction}</h6>
                          </div>
                        </a>
                      </div>
                    </div>
                    `
      });
    return user_html;
    }

// 各HTMLを作成する処理ここまで---------------------------
// 以下Ajaxの処理

    // sortクラスが付与されているボタンがクリックされたら処理を実行
    $('.sort').on('click',function () {
      // value値取得(id)
      var val = $(this).attr('id');
      var parent = $(this).parent().attr('id');
      $('#form').val('');
      $.ajax({
        type: 'GET',
        url: '/searchs/sort',
        data: {
          sort_id: val
        },
        dataType: 'json'
      })
      .done(function(data){
        // 取得してきたデータの総数
        var study_log_length = $('#more-study-logs').data('default-length');
        var note_length = $('#more-note-logs').data('default-length');
        var user_length = $('#more-user-logs').data('default-length');

        // study_sortをクリックした時
        if (parent == "study_sort"){
          var html = StudyLog_HTML(data.study_logs);
          // htmlをを書き換え
          $('#study-preview').html(html);
          // ページング用にidを取得し、dataの値として更新
          $('#more-study-logs').data('length',study_log_length);
          $("#more-study-logs").data('sort',val)

          // study_log_lengthが６未満のときはボタンを押せない
          if(study_log_length <= 6){
            $("#more-study-logs").prop("disabled",true);
          }else{
            $("#more-study-logs").prop('disabled',false);
          };
          // offsetを初期化
          $('#more-study-logs').data('offset',"6");
          $("#more-study-logs").prop('disabled',false);

        }else if(parent == "note_sort"){
          var html = Note_HTML(data.notes);
          $('#note-preview').html(html);
          // ページング用にidを取得し、dataの値として更新
          $("#more-notes").data('sort',val)

          // note_lengthが6未満の時はボタンを押せないようにする
          if(note_length <= 6){
            $("#more-notes").prop("disabled",true);
          }else{
            $("#more-notes").prop("disabled",false);
          };
          // lengthををnote_offsetの値でセット
          $('#more-notes').data('length',note_length);
          // offsetを初期化
          $('#more-notes').data('offset',"6");
          $("#more-notes").prop('disabled',false);

        }else if(parent == "user_sort"){
          var html = User_HTML(data.users);
          $('#user-preview').html(html);
          // ページング用にidを取得し、dataの値として更新
          $("#more-users").data('sort',val)
          // 取得してきたデータの総数
          $('#more-users').data('length',user_length);
          // 抽出した値が6以下の場合はボタン押せない(1ページの表示量)
          if(user_length <= 6){
            $("#more-users").prop("disabled",true);
          }else{
            $("#more-users").prop('disabled',false);
          };
          // offsetを初期化
          $('#more-users').data('offset',"6");
          $("#more-users").prop('disabled',false);
        };
      });
    }); 

    // テキストフォームにデータが入力されたら処理を実行
    $("#form").on('keyup',function(e){
      if(e.keyCode != 13) return;
      var keyword = $.trim($(this).val());
      var genre = $("#search_select").val();

      $.ajax({
        type: 'GET',
        url: '/searchs/search',
        data: {
          keyword: keyword,
          genre: genre
        },
        dataType: 'json'
      })
      .done(function(data){
        var study_log = StudyLog_HTML(data.study_logs);
        var note = Note_HTML(data.notes);
        var user = User_HTML(data.users);
        // １ページに表示する件数
        // 取得データ(length)
        var study_log_length = data.length.study_log_length;
        var note_length = data.length.note_length;
        var user_length = data.length.user_length;

        // ユーザ検索
        if(genre === "name"){
          $('#study-preview').html(study_log);
          $('#note-preview').html(note);
          $('#user-preview').html(user);

          // ソートメニュー初期化の処理
          // lengthの初期値をセットする処理
          $('#more-study-logs').data('length',study_log_length);
          $('#more-users').data('length',user_length);
          $('#more-notes').data('length',note_length);
          // offsetを初期値に戻す処理
          $('#more-study-logs').data('offset',6);
          $('#more-users').data('offset',6);
          $('#more-notes').data('offset',6);
          // 抽出した値が6以下の場合はボタン押せない(1ページの表示量)
          if(study_log_length <= 6){
            $("#more-study-logs").prop("disabled",true);
          } else {
            $("#more-study-logs").prop("disabled",false);
          };
          if(note_length <= 6){
            $("#more-notes").prop("disabled",true);
          } else {
            $("#more-notes").prop("disabled",false);
          };
          if(user_length <= 6){
            $("#more-users").prop("disabled",true);
          } else {
            $("#more-users").prop("disabled",false);
          };

        }else if(genre === "note"){
          $('#note-preview').html(note);
          // ソートメニュー初期化の処理
          // lengthをセット
          $('#more-notes').data('length',note_length);
          // offsetを初期化
          $('#more-notes').data('offset',6);
          // 抽出した値が6未満の場合はボタン押せない
          if(note_length <= 6){
            $("#more-notes").prop("disabled",true);
          } else {
            $("#more-notes").prop("disabled",false);
          };

        // タグ検索
        }else if(genre === "tag"){
          $('#study-preview').html(study_log);
          $('#note-preview').html(note);

          // ソートメニュー初期化の処理
          // lengthを更新する処理
          $('#more-study-logs').data('length',study_log_length);
          $('#more-notes').data('length',note_length);
          // offsetを初期値に戻す処理
          $('#more-study-logs').data('offset',6);
          $('#more-users').data('offset',6);
          // 抽出した値が6未満の場合はボタン押せない(1ページの表示量)
          if(study_log_length <= 6){
            $("#more-study-logs").prop("disabled",true);
          } else {
            $("#more-study-logs").prop("disabled",false);
          }
          if(note_length <= 6){
            $("#more-notes").prop("disabled",true);
          } else {
            $("#more-notes").prop("disabled",false);
          }
        };
      });
    });

    // もっと見るを押した時の処理
    $(".more").on('click',function() {
      more_param = $(this).attr('id');
      var offset = $(this).data('offset');
      var limit = $(this).data('limit');
      var length = $(this).data('length');
      var sort = $(this).data('sort');
      var keyword = $.trim($('#form').val());
      var genre = $("#search_select").val();
      offset = Number(offset);
      length = Number(length);
      $.ajax({
        type: 'GET',
        url: '/searchs/more',
        data: {
          offset: offset,
          sort: sort,
          keyword: keyword,
          genre: genre
        },
        dataType: 'json'
      })
      .done(function(data){
        // study_logのボタンを押した時
        if(more_param === "more-study-logs"){
          var study_log = StudyLog_HTML(data.study_logs);
          $('#study-preview').append(study_log);
          $("#more-study-logs").data('offset',offset + limit);
          // offsetの値がlengthと同じまたは大きくなったらボタンを押せなくする
          if($("#more-study-logs").data('offset') >= length){
            $("#more-study-logs").prop("disabled",true);
          };
        // noteのボタンを押した時
        }else if(more_param === "more-notes"){
          var note = Note_HTML(data.notes);
          $('#note-preview').append(note);
          $("#more-notes").data('offset',offset + limit);
          // offsetの値がlengthよりも同じまたは大きくなったらボタンを押せなくする
          if($("#more-notes").data('offset') >= length){ 
            $("#more-notes").prop("disabled",true);
          };
        // userのボタンを押した時
        }else if(more_param == "more-users"){
          var user = User_HTML(data.users);
          $('#user-preview').append(user);
          $("#more-users").data('offset',offset + limit);            
          // offsetの値がlengthよりも同じまたは大きくなったらボタンを押せなくする
          if($("#more-users").data('offset') >= length){ 
            $("#more-users").prop("disabled",true);
          };
        };
      });
    });
  });
</script>